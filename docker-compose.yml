version: "3.9"

services:

  dining_server:
    image: dining_service
    build:
      context: backend/microservices/dining_service/
      dockerfile: Dockerfile
    restart: always
    container_name: "dining-server"
    hostname: "dining-server"
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 26257
      DB_NAME: defaultdb   
      DB_USER: root
      DB_PASSWORD: ""

  user_server:
    image: users_service
    build:
      context: backend/microservices/users-service/
      dockerfile: Dockerfile
    restart: always
    container_name: "user-server"
    hostname: "user-server"
    ports:
      - "8002:8002"
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8002
      JWT_SECRET: TUCKOGOAT
      DB_HOST: db
      DB_PORT: 26257
      DB_NAME: defaultdb
      DB_USER: root
      DB_PASSWORD: ""

  angular:
    image: angular/najjaci
    build:
      context: frontend/
      dockerfile: Dockerfile
    restart: always
    container_name: "angular"
    hostname: "angular"
    ports:
      - "4200:4200"
    command: ["npx", "ng", "serve", "--host", "0.0.0.0", "--port", "4200", "--poll", "2000"]

  db:
    image: cockroachdb/cockroach:v23.2.0
    container_name: cockroachdb
    hostname: cockroachdb
    command: start-single-node --insecure
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach-data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD-SHELL", "cockroach sql --insecure --execute='SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  cockroach-data:

